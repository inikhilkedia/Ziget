{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilkedia/ziget/src/Ziget.js\";\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./Ziget.css\";\nexport default class Ziget extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTAChange = event => this.setState({\n      usernames: event.target.value\n    });\n\n    this.handleCBChange = event => this.setState({\n      individual: event.target.checked\n    });\n\n    this.handleSubmit = () => {\n      this.setState({\n        loading: true\n      });\n      const url = \"https://fe-test-zyper-engagement.herokuapp.com/start\";\n      const inputData = {\n        username: this.state.usernames,\n        individual: this.state.individual\n      };\n      console.log(JSON.stringify(inputData));\n      fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify(inputData),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.text()).then(jobId => {\n        console.log(jobId);\n        const url = \"https://fe-test-zyper-engagement.herokuapp.com/results/\" + jobId;\n        fetch(url, {\n          headers: {\n            Connection: \"keep-alive\"\n          }\n        }).then(r => {\n          if (r.ok) {\n            console.log(r);\n          }\n        });\n      });\n    };\n\n    this.getJobID = () => {\n      const url = \"https://fe-test-zyper-engagement.herokuapp.com/start\";\n      const inputData = {\n        username: this.state.usernames,\n        individual: this.state.individual\n      };\n      console.log(JSON.stringify(inputData));\n      fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify(inputData),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.text()).then(jobId => this.setState({\n        jobId\n      }));\n    };\n\n    this.getData = () => {\n      const url = \"https://fe-test-zyper-engagement.herokuapp.com/results/\" + this.state.jobId;\n      fetch(url).then(response => {\n        if (response.status === 202) {\n          console.log(response);\n        } else if (response.status === 200) {\n          console.log(response);\n          this.setState;\n        }\n      });\n    };\n\n    this.state = {\n      usernames: \"\",\n      individual: false,\n      jobId: \"\",\n      data: {},\n      loading: false\n    };\n    this.handleTAChange = this.handleTAChange.bind(this);\n    this.handleCBChange = this.handleCBChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    const output = this.state.loading ? React.createElement(\"div\", {\n      className: \"loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }) : React.createElement(\"output\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      className: \"Ziget\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"Ziget-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      className: \"Ziget-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      id: \"ziget-form\",\n      className: \"Ziget-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"textarea-label\",\n      htmlFor: \"usernames\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Username(s):\", React.createElement(\"textarea\", {\n      id: \"usernames\",\n      value: this.state.value,\n      onChange: this.handleTAChange,\n      autoFocus: true,\n      required: true,\n      rows: 10,\n      cols: 100,\n      placeholder: \"Enter comma(,) seperated Instagram handle. Example: abc,abc_def,abc.def\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"instructions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Instructions: For the sake of this example please enter\", \" \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"comma(,)\"), \"\\xA0seperated Instagram handles only.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Example: abc,abc_def,abc.def\"), \". \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), \"Please don't use spaces.\"), React.createElement(\"label\", {\n      className: \"checkbox-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"individual\",\n      onChange: this.handleCBChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), \"Tick to list all accounts individually.\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"submit\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"button\", {\n      type: \"reset\",\n      className: \"reset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Clear\")), React.createElement(\"output\", {\n      form: \"ziget-form\",\n      htmlFor: \"usernames individual\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/nikhilkedia/ziget/src/Ziget.js"],"names":["React","Component","Ziget","constructor","props","handleTAChange","event","setState","usernames","target","value","handleCBChange","individual","checked","handleSubmit","loading","url","inputData","username","state","console","log","JSON","stringify","fetch","method","body","headers","then","response","text","jobId","Connection","r","ok","getJobID","getData","status","data","bind","render","output","logo"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./Ziget.css\";\n\nexport default class Ziget extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      usernames: \"\",\n      individual: false,\n      jobId: \"\",\n      data: {},\n      loading: false,\n    };\n\n    this.handleTAChange = this.handleTAChange.bind(this);\n    this.handleCBChange = this.handleCBChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleTAChange = event => this.setState({ usernames: event.target.value });\n  handleCBChange = event => this.setState({ individual: event.target.checked });\n\n  handleSubmit = () => {\n    this.setState({ loading: true });\n    const url = \"https://fe-test-zyper-engagement.herokuapp.com/start\";\n    const inputData = {\n      username: this.state.usernames,\n      individual: this.state.individual\n    };\n    console.log(JSON.stringify(inputData));\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(inputData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(response => response.text())\n      .then(jobId => {\n        console.log(jobId);\n        const url =\n          \"https://fe-test-zyper-engagement.herokuapp.com/results/\" + jobId;\n        fetch(url, {\n          headers: {\n            Connection: \"keep-alive\"\n          }\n        }).then(r => {\n          if (r.ok) {\n            console.log(r);\n          }\n        });\n      });\n  };\n\n  getJobID = () => {\n    const url = \"https://fe-test-zyper-engagement.herokuapp.com/start\";\n    const inputData = {\n      username: this.state.usernames,\n      individual: this.state.individual\n    };\n    console.log(JSON.stringify(inputData));\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(inputData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(response => response.text())\n      .then(jobId => this.setState({ jobId }));\n  };\n\n  getData = () => {\n    const url =\n      \"https://fe-test-zyper-engagement.herokuapp.com/results/\" + this.state.jobId;\n    fetch(url).then(response => {\n      if (response.status === 202) {\n        console.log(response);\n      } else if (response.status === 200) {\n        console.log(response);\n        this.setState\n      }\n\n    });\n  }\n\n  render() {\n      const output= this.state.loading ? <div className=\"loader\" /> : <output></output>\n      return (\n        <div className=\"Ziget\">\n          <header className=\"Ziget-header\">\n            <img src={logo} className=\"Ziget-logo\" alt=\"logo\" />\n          </header>\n          <form id=\"ziget-form\" className=\"Ziget-form\">\n            <label className=\"textarea-label\" htmlFor=\"usernames\">\n              Username(s):\n            <textarea\n                id=\"usernames\"\n                value={this.state.value}\n                onChange={this.handleTAChange}\n                autoFocus\n                required\n                rows={10}\n                cols={100}\n                placeholder=\"Enter comma(,) seperated Instagram handle. Example: abc,abc_def,abc.def\"\n              />\n            </label>\n            <p className=\"instructions\">\n              Instructions: For the sake of this example please enter{\" \"}\n              <b>comma(,)</b>&nbsp;seperated Instagram handles only.\n            <br />\n              <b>Example: abc,abc_def,abc.def</b>. <br />\n              Please don't use spaces.\n          </p>\n            <label className=\"checkbox-label\">\n              <input type=\"checkbox\" id=\"individual\" onChange={this.handleCBChange} />\n              Tick to list all accounts individually.\n          </label>\n            <button type=\"button\" className=\"submit\" onClick={this.handleSubmit}>\n              Submit\n          </button>\n            <button type=\"reset\" className=\"reset\">\n              Clear\n          </button>\n          </form>\n          <output form=\"ziget-form\" htmlFor=\"usernames individual\">\n          </output>\n        </div>\n      );\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}