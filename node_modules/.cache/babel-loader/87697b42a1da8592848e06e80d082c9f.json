{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilkedia/ziget/src/Ziget.js\";\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./Ziget.css\";\nexport default class Ziget extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnLoad = event => this.setState({\n      usernames: event.target.value\n    });\n\n    this.handleTAChange = event => this.setState({\n      usernames: event.target.value\n    });\n\n    this.handleCBChange = event => this.setState({\n      individual: event.target.checked\n    });\n\n    this.handleSubmit = () => {\n      const inputData = {\n        username: this.state.usernames,\n        individual: this.state.individual\n      };\n      console.log(inputData);\n    };\n\n    this.state = {\n      usernames: \"\",\n      individual: false\n    };\n    this.handleOnLoad = this.handleOnLoad.bind(this);\n    this.handleTAChange = this.handleTAChange.bind(this);\n    this.handleCBChange = this.handleCBChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Ziget\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"Ziget-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      className: \"Ziget-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      className: \"Ziget-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"textarea-label\",\n      htmlFor: \"usernames\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Username(s):\", React.createElement(\"textarea\", {\n      id: \"usernames\",\n      value: this.state.value,\n      onLoad: this.handleOnLoad,\n      onChange: this.handleTAChange,\n      autoFocus: true,\n      required: true,\n      rows: 10,\n      cols: 100,\n      defaultValue: \"nikhilkedia,awgamble\",\n      placeholder: \"Enter comma(,) seperated Instagram handle. Example: abc,abc_def,abc.def\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"instructions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Instructions: For the sake of this example please enter \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"comma(,)\"), \"\\xA0seperated Instagram handles only.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Example: abc,abc_def,abc.def\"), \". \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), \"Please don't use spaces.\"), React.createElement(\"label\", {\n      className: \"checkbox-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      onLoad: this.handleOnLoad,\n      onChange: this.handleCBChange,\n      defaultChecked: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), \"Tick to list all accounts individually.\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"submit\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"button\", {\n      type: \"reset\",\n      className: \"reset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Clear\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/nikhilkedia/ziget/src/Ziget.js"],"names":["React","Component","Ziget","constructor","props","handleOnLoad","event","setState","usernames","target","value","handleTAChange","handleCBChange","individual","checked","handleSubmit","inputData","username","state","console","log","bind","render","logo"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./Ziget.css\";\n\nexport default class Ziget extends Component {\n                 constructor(props) {\n                   super(props);\n                   this.state = {\n                     usernames: \"\",\n                     individual: false\n                   };\n\n                   this.handleOnLoad = this.handleOnLoad.bind(this);\n                   this.handleTAChange = this.handleTAChange.bind(this);\n                   this.handleCBChange = this.handleCBChange.bind(this);\n                   this.handleSubmit = this.handleSubmit.bind(this);\n                 }\n\n                 handleOnLoad = event =>\n                   this.setState({ usernames: event.target.value });\n                 handleTAChange = event =>\n                   this.setState({ usernames: event.target.value });\n                 handleCBChange = event =>\n                   this.setState({ individual: event.target.checked });\n\n                 handleSubmit = () => {\n                   const inputData = {\n                     username: this.state.usernames,\n                     individual: this.state.individual\n                   };\n                   console.log(inputData);\n                 };\n\n                 render() {\n                   return (\n                     <div className=\"Ziget\">\n                       <header className=\"Ziget-header\">\n                         <img src={logo} className=\"Ziget-logo\" alt=\"logo\" />\n                       </header>\n                       <form className=\"Ziget-form\">\n                         <label className=\"textarea-label\" htmlFor=\"usernames\">\n                           Username(s):\n                           <textarea\n                             id=\"usernames\"\n                             value={this.state.value}\n                             onLoad={this.handleOnLoad}\n                             onChange={this.handleTAChange}\n                             autoFocus\n                             required\n                             rows={10}\n                             cols={100}\n                             defaultValue=\"nikhilkedia,awgamble\"\n                             placeholder=\"Enter comma(,) seperated Instagram handle. Example: abc,abc_def,abc.def\"\n                           />\n                         </label>\n                         <p className=\"instructions\">\n                           Instructions: For the sake of this example please\n                           enter <b>comma(,)</b>&nbsp;seperated Instagram\n                           handles only.\n                           <br />\n                           <b>Example: abc,abc_def,abc.def</b>. <br />\n                           Please don't use spaces.\n                         </p>\n                         <label className=\"checkbox-label\">\n                           <input\n                             type=\"checkbox\"\n                             onLoad={this.handleOnLoad}\n                             onChange={this.handleCBChange}\n                             defaultChecked={false}\n                           />\n                           Tick to list all accounts individually.\n                         </label>\n                         <button\n                           type=\"button\"\n                           className=\"submit\"\n                           onClick={this.handleSubmit}\n                         >\n                           Submit\n                         </button>\n                         <button type=\"reset\" className=\"reset\">\n                           Clear\n                         </button>\n                       </form>\n                     </div>\n                   );\n                 }\n               }\n"]},"metadata":{},"sourceType":"module"}