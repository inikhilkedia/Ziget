{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilkedia/ziget/src/Ziget.js\";\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./Ziget.css\";\nexport default class Ziget extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTAChange = event => this.setState({\n      usernames: event.target.value\n    });\n\n    this.handleCBChange = event => this.setState({\n      individual: event.target.checked\n    });\n\n    this.getJobID = () => {\n      const postURL = \"https://fe-test-zyper-engagement.herokuapp.com/start\";\n      const userInput = {\n        username: this.state.usernames,\n        individual: this.state.individual\n      };\n      console.log(JSON.stringify(userInput));\n      fetch(postURL, {\n        method: \"POST\",\n        body: JSON.stringify(userInput),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.text()).then(jobId => this.setState({\n        jobId\n      }));\n    };\n\n    this.getData = () => {\n      const getURL = \"https://fe-test-zyper-engagement.herokuapp.com/results/\";\n      console.log(this.state.jobId);\n      console.log(\"Result URL: \", getURL + this.state.jobId);\n      fetch(getURL + this.state.jobId, {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(data => this.setState({\n        data\n      }));\n    };\n\n    this.displayData = () => {\n      const data = this.state.data;\n      document.getElementById(\"results\").innerHTML = \"\";\n      let x, y;\n\n      for (x in data) {\n        let obj = data[x].output;\n\n        for (y in obj) {\n          document.getElementById(\"results\").innerHTML += y + \"&nbsp;:&nbsp;\" + obj[y] + \"<br>\";\n        }\n\n        document.getElementById(\"results\").innerHTML += \"<br><br>\";\n      }\n    };\n\n    this.handleSubmit = () => {\n      this.setState({\n        loading: true\n      });\n      this.getJobID();\n      setTimeout(this.getData, 3000);\n      setTimeout(this.displayData, 5000);\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.state = {\n      usernames: \"\",\n      individual: false,\n      jobId: \"\",\n      data: {},\n      dataOut: \"\",\n      loading: false\n    };\n    this.handleTAChange = this.handleTAChange.bind(this);\n    this.handleCBChange = this.handleCBChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.getJobID = this.getJobID.bind(this);\n    this.getData = this.getData.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Ziget\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"Ziget-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      className: \"Ziget-logo\",\n      alt: \"Zyper Logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Hi! Welcome to Zyper Instagram engagement\")), React.createElement(\"form\", {\n      id: \"ziget-form\",\n      className: \"Ziget-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"textarea-label\",\n      htmlFor: \"usernames\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"textarea-label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Username(s):\"), React.createElement(\"textarea\", {\n      id: \"usernames\",\n      value: this.state.value,\n      onChange: this.handleTAChange,\n      autoFocus: true,\n      required: true,\n      rows: 10,\n      cols: 100,\n      placeholder: \"Enter Instagram handles here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      className: \"checkbox-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"individual\",\n      onChange: this.handleCBChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      className: \"checkbox-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Tick to list all accounts individually.\")), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"submit\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"button\", {\n      type: \"reset\",\n      className: \"reset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Clear\")), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Results:\"), React.createElement(\"p\", {\n      className: \"output\",\n      id: \"results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/nikhilkedia/ziget/src/Ziget.js"],"names":["React","Component","Ziget","constructor","props","handleTAChange","event","setState","usernames","target","value","handleCBChange","individual","checked","getJobID","postURL","userInput","username","state","console","log","JSON","stringify","fetch","method","body","headers","then","response","text","jobId","getData","getURL","mode","json","data","displayData","document","getElementById","innerHTML","x","y","obj","output","handleSubmit","loading","setTimeout","dataOut","bind","render","logo"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./Ziget.css\";\n\nexport default class Ziget extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      usernames: ``,\n      individual: false,\n      jobId: ``,\n      data: {},\n      dataOut: ``,\n      loading: false\n    };\n\n    this.handleTAChange = this.handleTAChange.bind(this);\n    this.handleCBChange = this.handleCBChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.getJobID = this.getJobID.bind(this);\n    this.getData = this.getData.bind(this);\n  }\n\n  handleTAChange = event => this.setState({ usernames: event.target.value });\n  handleCBChange = event => this.setState({ individual: event.target.checked });\n\n  getJobID = () => {\n    const postURL = `https://fe-test-zyper-engagement.herokuapp.com/start`;\n    const userInput = {\n      username: this.state.usernames,\n      individual: this.state.individual\n    };\n    console.log(JSON.stringify(userInput));\n    fetch(postURL, {\n      method: `POST`,\n      body: JSON.stringify(userInput),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(response => response.text())\n      .then(jobId => this.setState({ jobId }));\n  };\n\n  getData = () => {\n    const getURL = `https://fe-test-zyper-engagement.herokuapp.com/results/`;\n    console.log(this.state.jobId);\n    console.log(`Result URL: `, getURL + this.state.jobId);\n    fetch(getURL + this.state.jobId, {\n      method: `GET`,\n      mode: `cors`,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(response => response.json())\n      .then(data => this.setState({ data }));\n  };\n\n  displayData = () => {\n    const data = this.state.data;\n    document.getElementById(\"results\").innerHTML = ``;\n    let x, y;\n    for (x in data) {\n      let obj = data[x].output;\n      for (y in obj) {\n        document.getElementById(\"results\").innerHTML +=\n          y + \"&nbsp;:&nbsp;\" + obj[y] + \"<br>\";\n      }\n      document.getElementById(\"results\").innerHTML += \"<br><br>\";\n    }\n  };\n\n  handleSubmit = () => {\n    this.setState({ loading: true });\n    this.getJobID();\n    setTimeout(this.getData, 3000);\n    setTimeout(this.displayData, 5000);\n    this.setState({ loading: false });\n  };\n\n  render() {\n    return (\n      <div className=\"Ziget\">\n        <header className=\"Ziget-header\">\n          <img src={logo} className=\"Ziget-logo\" alt=\"Zyper Logo\" />\n          <h1>Hi! Welcome to Zyper Instagram engagement</h1>\n        </header>\n        <form id=\"ziget-form\" className=\"Ziget-form\">\n          <label className=\"textarea-label\" htmlFor=\"usernames\">\n            <h3 className=\"textarea-label-text\">Username(s):</h3>\n            <textarea\n              id=\"usernames\"\n              value={this.state.value}\n              onChange={this.handleTAChange}\n              autoFocus\n              required\n              rows={10}\n              cols={100}\n              placeholder=\"Enter Instagram handles here\"\n            />\n          </label>\n          <label className=\"checkbox-label\">\n            <input\n              type=\"checkbox\"\n              id=\"individual\"\n              onChange={this.handleCBChange}\n            />\n            <h4 className=\"checkbox-text\">\n              Tick to list all accounts individually.\n            </h4>\n          </label>\n          <button type=\"button\" className=\"submit\" onClick={this.handleSubmit}>\n            Submit\n          </button>\n          <button type=\"reset\" className=\"reset\">\n            Clear\n          </button>\n        </form>\n        <h3>Results:</h3>\n        <p className=\"output\" id=\"results\" />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}