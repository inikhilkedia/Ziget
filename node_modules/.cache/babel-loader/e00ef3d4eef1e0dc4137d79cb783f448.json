{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilkedia/ziget/src/Ziget.js\";\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./Ziget.css\";\nexport default class Ziget extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTAChange = event => this.setState({\n      usernames: event.target.value\n    });\n\n    this.handleCBChange = event => this.setState({\n      individual: event.target.checked\n    });\n\n    this.handleSubmit = () => {\n      this.setState({\n        loading: true\n      });\n      const postURL = \"https://fe-test-zyper-engagement.herokuapp.com/start\";\n      this.getJobID();\n      console.log(this.state.jobId);\n      this.getData();\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.getJobID = () => {\n      const inputData = {\n        username: this.state.usernames,\n        individual: this.state.individual\n      };\n      console.log(JSON.stringify(inputData));\n      fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify(inputData),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.text()).then(jobId => this.setState({\n        jobId\n      }));\n    };\n\n    this.getData = () => {\n      const urlWithJobID = \"https://fe-test-zyper-engagement.herokuapp.com/results/\" + this.state.jobId;\n      fetch(urlWithJobID, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(data => console.log(\"Data: \", data));\n    };\n\n    this.state = {\n      usernames: \"\",\n      individual: false,\n      jobId: \"\",\n      data: {},\n      loading: false\n    };\n    this.handleTAChange = this.handleTAChange.bind(this);\n    this.handleCBChange = this.handleCBChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Ziget\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"Ziget-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      className: \"Ziget-logo\",\n      alt: \"Zyper Logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      id: \"ziget-form\",\n      className: \"Ziget-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"textarea-label\",\n      htmlFor: \"usernames\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Username(s):\", React.createElement(\"textarea\", {\n      id: \"usernames\",\n      value: this.state.value,\n      onChange: this.handleTAChange,\n      autoFocus: true,\n      required: true,\n      rows: 10,\n      cols: 100,\n      placeholder: \"Enter comma(,) seperated Instagram handle. Example: abc,abc_def,abc.def\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"instructions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Instructions: For the sake of this example please enter\", \" \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"comma(,)\"), \"\\xA0seperated Instagram handles only.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Example: abc,abc_def,abc.def\"), \". \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), \"Please don't use spaces.\"), React.createElement(\"label\", {\n      className: \"checkbox-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"individual\",\n      onChange: this.handleCBChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), \"Tick to list all accounts individually.\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"submit\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"button\", {\n      type: \"reset\",\n      className: \"reset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Clear\")), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Results:\"), React.createElement(\"div\", {\n      className: \"loader\",\n      hidden: !this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"output\",\n      hidden: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/nikhilkedia/ziget/src/Ziget.js"],"names":["React","Component","Ziget","constructor","props","handleTAChange","event","setState","usernames","target","value","handleCBChange","individual","checked","handleSubmit","loading","postURL","getJobID","console","log","state","jobId","getData","inputData","username","JSON","stringify","fetch","url","method","body","headers","then","response","text","urlWithJobID","json","data","bind","render","logo"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./Ziget.css\";\n\nexport default class Ziget extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      usernames: \"\",\n      individual: false,\n      jobId: \"\",\n      data: {},\n      loading: false\n    };\n\n    this.handleTAChange = this.handleTAChange.bind(this);\n    this.handleCBChange = this.handleCBChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleTAChange = event => this.setState({ usernames: event.target.value });\n  handleCBChange = event => this.setState({ individual: event.target.checked });\n\n  handleSubmit = () => {\n    this.setState({ loading: true });\n    const postURL = \"https://fe-test-zyper-engagement.herokuapp.com/start\";\n    this.getJobID();\n    console.log(this.state.jobId);\n    this.getData();\n    this.setState({ loading: false });\n  };\n\n  getJobID = () => {\n    \n    const inputData = {\n      username: this.state.usernames,\n      individual: this.state.individual\n    };\n    console.log(JSON.stringify(inputData));\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(inputData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(response => response.text())\n      .then(jobId => this.setState({ jobId }));\n  };\n\n  getData = () => {\n    const urlWithJobID =\n      \"https://fe-test-zyper-engagement.herokuapp.com/results/\" +\n      this.state.jobId;\n    fetch(urlWithJobID, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(response => response.json())\n      .then(data => console.log(`Data: `, data));\n  };\n\n  render() {\n    return (\n      <div className=\"Ziget\">\n        <header className=\"Ziget-header\">\n          <img src={logo} className=\"Ziget-logo\" alt=\"Zyper Logo\" />\n        </header>\n        <form id=\"ziget-form\" className=\"Ziget-form\">\n          <label className=\"textarea-label\" htmlFor=\"usernames\">\n            Username(s):\n            <textarea\n              id=\"usernames\"\n              value={this.state.value}\n              onChange={this.handleTAChange}\n              autoFocus\n              required\n              rows={10}\n              cols={100}\n              placeholder=\"Enter comma(,) seperated Instagram handle. Example: abc,abc_def,abc.def\"\n            />\n          </label>\n          <p className=\"instructions\">\n            Instructions: For the sake of this example please enter{\" \"}\n            <b>comma(,)</b>&nbsp;seperated Instagram handles only.\n            <br />\n            <b>Example: abc,abc_def,abc.def</b>. <br />\n            Please don't use spaces.\n          </p>\n          <label className=\"checkbox-label\">\n            <input\n              type=\"checkbox\"\n              id=\"individual\"\n              onChange={this.handleCBChange}\n            />\n            Tick to list all accounts individually.\n          </label>\n          <button type=\"button\" className=\"submit\" onClick={this.handleSubmit}>\n            Submit\n          </button>\n          <button type=\"reset\" className=\"reset\">\n            Clear\n          </button>\n        </form>\n        <h3>Results:</h3>\n        <div className=\"loader\" hidden={!this.state.loading} />\n        <div className=\"output\" hidden={this.state.loading} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}